@model SingleSignOn.Core.Mediators.Messages.CreateUserMessage

@{
    ViewBag.Title = "Admin";
}

<h2> You are in Admin Page </h2>

@{
    if (ViewBag.IsSignedInByCached != null && ViewBag.IsSignedInByCached)
    {
        <h3>Authentication by cache</h3>
    }
    else
    {
        <h3>Authentication by database</h3>
    }
}

<h2>Use the form below for register new user into Single Sign On Service</h2>
@using (Html.BeginForm("CreateUser", "Auth", new { },
    FormMethod.Post, new { @class = "", @id = "form", @role = "form" }))
{

    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-user"></i></span>
            @Html.TextBoxFor(x => x.Username, new { required = "", @class = "form-control", @placeholder = "Username" })
        </div>
    </div>
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-lock"></i></span>
            @Html.PasswordFor(x => x.Password, new { required = "", @class = "form-control", @placeholder = "Password" })
        </div>
    </div>


    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-lock"></i></span>
            @Html.DropDownListFor(x => x.Role, new List<SelectListItem>()
    {
        new SelectListItem{Text = "Admin",Value = "1"},
        new SelectListItem{Text = "Standard",Value = "2"}
    }, new { required = "", @class = "form-control" })
        </div>
    </div>
    @Html.ValidationMessage("Error")
    <br />
    <br />
    if (ViewBag.SuccessUserCreate != null && ViewBag.SuccessUserCreate)
    {
        <h1>User successfully created.</h1>
    }
    <button type="submit" class="btn btn-primary block full-width m-b">Create User</button>
}
